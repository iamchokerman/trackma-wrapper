#!/bin/sh

FZF="fzf -0 -1 --ansi --height 10%"
REGEX="\d+\s+(.+?)+\s+\d+\s+/\s+\d+\s+\d+"

# Quits Terminal application on exit (MacOS only)
# trap ctrl_c EXIT
# ctrl_c() {
# 	osascript -e 'quit app "Terminal"'
# }

# Exit immediately if a command exits with a non-zero status
set -e

while true; do
tput clear
PROMPT=$(printf "watch\nadd\ndelete\nlist\nupdate_episodes\nupdate_status\nscore\ninfo\naltname\nretrieve\nsend\nlist_sorted_by_score"|
	$FZF -i --prompt="Choose an action: ")
case $PROMPT in
	watch)
    CHOICE=$(printf "filter watching\nls"|trackma -a 1|grep -Eo "$REGEX"|$FZF -i --prompt="Choose an anime to watch: ")
    INDEX=$(printf "%s" "$CHOICE"|cut -d" " -f1)
		ANIME="$(trackma -a 1 info "$INDEX"|head -n 1)"
		EPNUM="$(trackma -a 1 search "$ANIME"|sed -En "s/.*\.[[:space:]]+([0-9]*) \/.*/\1/p")"
		animdl stream "$ANIME" -r $((EPNUM+1))
		# ani-cli -a $((EPNUM+1)) "$ANIME"
		while true; do
    		printf "Do you want to set this episode as watched? [Y/n]"
    		IFS= read -r yn < /dev/tty
    		if [ -z "$yn" ]; then
        		yn="y"
    		fi
    		case "$yn" in
        		[Yy]* ) trackma -a 1 update "$INDEX" $((EPNUM + 1)); break;;
        		[Nn]* ) break;;
        		* ) echo "Please answer yes or no.";;
    		esac
		done
		;;
	add)
		printf "What anime do you want to add? "
		read -r ANIME
		ADDINDEX=$(printf "add %s\nls" "$ANIME"|trackma -a 1|grep -E '[0-9]{1,2}:'|$FZF -i --prompt="Choose the anime to add: "|cut -d ':' -f1)
		printf "add %s\n%s" "$ANIME" "$ADDINDEX"|trackma -a 1 > /dev/null
		;;
	delete)
		INDEX=$(printf "filter watching\nls"|trackma -a 1|grep -Eo "$REGEX"|
			$FZF -i --prompt="Choose an anime to delete: "|cut -d" " -f1)
		printf "delete %s\ny" "$INDEX"|trackma -a 1 > /dev/null
		;;
	list)
		STATUS=$(printf "watching\ncompleted\nrewatching\npaused\ndropped\nplantowatch"|$FZF -i --prompt="Choose a status: ")
		printf "filter %s\nls" "$STATUS"|trackma -a 1|sed "s/\x1b\[[0-9;]*m//g"|grep -Eo "$REGEX"|less
		;;
	update_episodes|update_status)
		STATUS=$(printf "watching\ncompleted\nrewatching\npaused\ndropped\nplantowatch"|$FZF -i --prompt="Choose a status: ")
		INDEX="$(printf "filter %s\nls" "$STATUS"|trackma -a 1|grep -Eo "$REGEX"|
			$FZF -i --prompt="Choose an anime: "|cut -d" " -f1)"
		if [ "$PROMPT" = "update_episodes" ]; then
			printf "How many episodes of this anime have you watched in total? "
			read -r NEWEPISODE
			printf "filter %s\nupdate %s %s" "$STATUS" "$INDEX" "$NEWEPISODE"|trackma -a 1 > /dev/null
		else
			NEWSTATUS=$(printf "watching\ncompleted\nrewatching\npaused\ndropped\nplantowatch"|$FZF -i --prompt="Choose a status: ")
			printf "filter %s\nstatus %s %s" "$STATUS" "$INDEX" "$NEWSTATUS"|trackma -a 1 > /dev/null
		fi
		;;
	score)
		STATUS=$(printf "watching\ncompleted\nrewatching\npaused\ndropped\nplantowatch"|$FZF -i --prompt="Choose a status: ")
		INDEX="$(printf "filter %s\nls" "$STATUS"|trackma -a 1|grep -Eo "$REGEX"|
			$FZF -i --prompt="Choose an anime: "|cut -d" " -f1)"
		printf "What score do you want to give this anime? "
		read -r SCORE
		printf "filter %s\nscore %s %s" "$STATUS" "$INDEX" "$SCORE"|trackma -a 1 > /dev/null
		;;
	info)
		STATUS=$(printf "watching\ncompleted\nrewatching\npaused\ndropped\nplantowatch"|$FZF -i --prompt="Choose a status: ")
		INDEX="$(printf "filter %s\nls" "$STATUS"|trackma -a 1|grep -Eo "$REGEX"|
			$FZF -i --prompt="Choose an anime: "|cut -d" " -f1)"
		printf "filter %s\ninfo %s" "$STATUS" "$INDEX"|trackma -a 1|sed -n '/https/,/Status/p'|sed -e 's/<[^>]*>//g'|less
		;;
	altname)
		printf "What is the new name? "
		read -r NEWNAME
		printf "altname %s %s" "$INDEX" "$NEWNAME"|trackma -a 1 > /dev/null
		;;
	retrieve)
		printf "retrieve"|trackma -a 1
		;;
	send)
		printf "send"|trackma -a 1
		;;
	list_sorted_by_score)
		STATUS=$(printf "watching\ncompleted\nrewatching\npaused\ndropped\nplantowatch"|$FZF -i --prompt="Choose a status: ")
		printf "filter %s\nsort my_score\nls" "$STATUS"|trackma -a 1|grep -Eo "$REGEX"|
			$FZF -i --prompt="Choose an anime: "|cut -d" " -f1
		;;
esac
done
